@model db_query_v1._0._0._1.Models.SettingsViewModel
@using Microsoft.AspNetCore.Identity
@using db_query_v1._0._0._1.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Settings";
    var user = SignInManager.IsSignedIn(User)
        ? await UserManager.GetUserAsync(User)
        : null;
}

<style>
    html, body {
        margin: 0; padding: 0;
        height: 100%; width: 100%;
        overflow: hidden;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #eef2f7;
    }

    .auth-bg {
        position: fixed; top: 0; left: 0;
        height: 100%; width: 100%;
        background: url('/images/bg.jpg') no-repeat center center fixed;
        background-size: cover;
        display: flex; justify-content: center; align-items: center;
        padding: 2rem;
    }

    .auth-card {
        backdrop-filter: blur(10px);
        background-color: rgba(255,255,255,0.95);
        border-radius: 1.5rem;
        box-shadow: 0 12px 30px rgba(0,0,0,0.25);
        padding: 4rem 3rem;
        max-width: 600px; width: 100%;
        animation: fadeIn 0.4s ease;
        position: relative;
    }

    keyframes fadeIn {
        from { opacity: 0; transform: translateY(20px); }
        to   { opacity: 1; transform: translateY(0); }
    }

    .form-floating {
        position: relative;
        margin-bottom: 1rem;
    }
    .form-floating input,
    .form-floating select {
        width: 100%;
        border-radius: 0.75rem !important;
        padding: 1.2rem 1rem;
        font-size: 1.1rem;
        border: 1px solid #ced4da;
        background-color: #fff;
        box-shadow: inset 0 1px 2px rgba(0,0,0,0.04);
        transition: border-color 0.3s ease, box-shadow 0.3s ease;
    }
    .form-floating input:focus,
    .form-floating select:focus {
        border-color: #80bdff;
        box-shadow: 0 0 0 0.15rem rgba(13,110,253,0.25);
    }
    .form-floating label {
        position: absolute;
        top: 0.5rem; left: 1rem;
        pointer-events: none;
        font-size: 0.95rem;
        color: #495057;
        transition: transform 0.2s, font-size 0.2s;
    }
    .form-floating input:not(:placeholder-shown) + label,
    .form-floating select:not([value=""]) + label {
        transform: translateY(-1.5rem) scale(0.85);
    }

    .btn-primary {
        background-color: #2563eb;
        border: none;
        font-weight: 600;
        font-size: 1.1rem;
        padding: 0.85rem 1rem;
        transition: background-color 0.3s ease, transform 0.2s ease;
        width: 100%;
    }
    .btn-primary:hover {
        background-color: #1e50c3;
        transform: scale(1.02);
    }
    .rounded-pill { border-radius: 50rem; }

    .dropdown.user-avatar-topright {
        position: fixed; top: 1rem; right: 1rem; z-index: 1100;
    }
    .user-avatar {
        width: 70px; height: 70px;
        border-radius: 50%;
        border: 2px solid rgba(255,255,255,0.8);
        object-fit: cover;
        transition: transform 0.2s, border-color 0.2s;
        cursor: pointer;
    }
    .user-avatar:hover {
        transform: scale(1.1);
        border-color: #fff;
    }
    .dropdown-menu {
        background: rgba(0,0,0,0.5);
        backdrop-filter: blur(12px);
        border: none;
        border-radius: 0.75rem;
        padding: 0.5rem 0;
        min-width: 220px;
        box-shadow: 0 8px 24px rgba(0,0,0,0.3);
    }
    .dropdown-item {
        color: rgba(255,255,255,0.8);
        padding: 0.75rem 1.5rem;
        font-weight: 500;
        transition: background 0.2s, color 0.2s;
    }
    .dropdown-item:hover,
    .dropdown-item:focus {
        color: #fff;
        background: rgba(255,255,255,0.1);
    }
    .dropdown-divider {
        margin: 0.5rem 0; border-top: 1px solid rgba(255,255,255,0.2);
    }
</style>

<div class="auth-bg">
    @if (user != null)
    {
        <div class="dropdown user-avatar-topright">
            <a href="#" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                <img src="https://ui-avatars.com/api/?name=@user.FirstName+@user.LastName&background=0D8ABC&color=fff"
                     alt="Avatar"
                     class="user-avatar" />
            </a>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                <li><a class="dropdown-item" href="@Url.Action("Settings","Account")">Settings</a></li>
                <li><a class="dropdown-item" href="@Url.Action("Upgrade","Account")">Upgrade Plan</a></li>
                <li><hr class="dropdown-divider" /></li>
                <li>
                    <form asp-controller="Account" asp-action="Logout" method="post" class="m-0">
                        <button type="submit" class="dropdown-item">Log out</button>
                    </form>
                </li>
            </ul>
        </div>
    }


    <div class="auth-card">
        <h3 class="text-center mb-4">Your Settings</h3>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">@TempData["SuccessMessage"]</div>
        }

        <form asp-action="Settings" method="post" novalidate>
            @Html.AntiForgeryToken()
            <div asp-validation-summary="All" class="text-danger mb-3"></div>

            <div class="form-floating">
                <input asp-for="FirstName" class="form-control" placeholder="First Name" />
                <label asp-for="FirstName"></label>
                <span asp-validation-for="FirstName" class="text-danger small"></span>
            </div>

            <div class="form-floating">
                <input asp-for="LastName" class="form-control" placeholder="Last Name" />
                <label asp-for="LastName"></label>
                <span asp-validation-for="LastName" class="text-danger small"></span>
            </div>

            <div class="form-floating">
                <input asp-for="Email" class="form-control" placeholder="Email" readonly />
                <label asp-for="Email"></label>
            </div>

            <div class="form-floating">
                <input asp-for="Phone" class="form-control" placeholder="Phone Number" />
                <label asp-for="Phone"></label>
                <span asp-validation-for="Phone" class="text-danger small"></span>
            </div>

            <div class="form-floating">
                <input asp-for="Address" class="form-control" placeholder="Address" />
                <label asp-for="Address"></label>
                <span asp-validation-for="Address" class="text-danger small"></span>
            </div>

            <div class="form-floating">
                <input asp-for="DateOfBirth" class="form-control" type="date" placeholder="Date of Birth" />
                <label asp-for="DateOfBirth"></label>
                <span asp-validation-for="DateOfBirth" class="text-danger small"></span>
            </div>

            @for (int i = 0; i < Model.Specializations.Count(); i++)
            {
                <div class="form-floating">
                    <input name="Specializations[@i]" value="@Model.Specializations[i]"
                           class="form-control" placeholder="Specialization @(i + 1)" />
                    <label>Specialization @(i + 1)</label>
                </div>
            }

            <button type="submit" class="btn btn-primary rounded-pill mt-3">Save Settings</button>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
